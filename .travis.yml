notifications:
  email: false 

language: cpp

dist: bionic
sudo: false

# Don't shallow clone as this may break the versioning
git:
  depth: false


branches:
  only:
  - master

# BUILD MATRIX
matrix:
  fast_finish: true
  include:
  # OSX
  - os: osx
    osx_image: xcode9.3

  - os: osx
    osx_image: xcode9.4

  - os: osx
    osx_image: xcode10

  - os: osx
    osx_image: xcode10.1

  - os: osx
    osx_image: xcode10.2

  - os: osx
    osx_image: xcode11.6
  
  - os: osx
    osx_image: xcode12
  
  # LINUX GCC
  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5', 'ninja-build']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-6', 'ninja-build']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7', 'ninja-build']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8', 'ninja-build']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-9', 'ninja-build']

  # LINUX CLANG
  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
    addons:
      apt:
        sources: ['llvm-toolchain-bionic-7']
        packages: ['clang-7', 'ninja-build']

  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
    addons:
      apt:
        sources: ['llvm-toolchain-bionic-8']
        packages: ['clang-8', 'ninja-build']

  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"
    addons:
      apt:
        sources: ['llvm-toolchain-bionic-9']
        packages: ['clang-9', 'ninja-build']


before_install:
- |
   if [[ (-x $(which brew)) ]]; then
     brew update
     brew install cmake ninja
     brew upgrade cmake
     cmake --version
   fi
- if [[ "${MATRIX_EVAL}" != "" ]]; then eval ${MATRIX_EVAL}; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then pyenv global 3.7.1; fi

# Show OS/compiler version
- uname -a
- $CXX --version

install:
- mkdir build; cd build;
- cmake -DBUILD_PYMEM3DG=ON -GNinja ..
- cmake --build . --config Release

script:
- ctest -C Release -V -j
