name: Testing and release

on:
  push:
    branches:
      - master
      - development
    tags:
      # The regex: /^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
      - 'v[0-9].[0-9]+.[0-9]+*'
  pull_request:
    branches: 
      - master
      - development

jobs:
  build_linux:
    name: Setup, build, and test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Resolve dependencies
        run: sudo apt install netcdf-c++4-dev libnetcdf-dev xorg-dev libeigen3-dev pybind11-dev

      - name: Build and test
        run: |
          mkdir -p build && cd build;
          cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_PYMEM3DG=ON -DSUITESPARSE=OFF -DWITH_NETCDF=ON ..
          cmake --build . --config Release -j 4
          ctest -C Release -V -j 4

  build_macos:
    name: Setup, build, and test
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, macos-11]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Resolve dependencies
        run: brew install netcdf eigen pybind11

      - name: Build and test
        run: |
          mkdir -p build && cd build;
          cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_PYMEM3DG=ON -DSUITESPARSE=OFF -DWITH_NETCDF=ON ..
          cmake --build . --config Release -j 4
          ctest -C Release -V -j 4


  build_windows:
    name: Setup, build, and test
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup VCPKG
        run: | 
          mkdir -p vcpkg
          pushd vcpkg
          git init
          git remote add origin https://github.com/microsoft/vcpkg 
          git fetch origin master
          git checkout -b master origin/master
          ./bootstrap-vcpkg.bat
          ./vcpkg install netcdf-c:x64-windows netcdf-cxx4:x64-windows eigen3:x64-windows
          popd

      - name: Build and test
        run: |
          mkdir -p build && cd build;
          cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_PYMEM3DG=ON -DSUITESPARSE=OFF -DWITH_NETCDF=ON ..
          cmake --build . --config Release -j 4
          ctest -C Release -V -j 4


  deploy_documentation:
    name: Deploy documentation to Github pages
    runs-on: ubuntu-latest
    needs: [build_windows, build_linux, build_macos]
    # only deploy for master branch 
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Build and test
      run: |
        mkdir -p build && cd build;
        cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_PYMEM3DG=OFF -DSUITESPARSE=OFF -DWITH_NETCDF=ON -DBUILD_MEM3DG_DOCS=ON -GNinja ..
        ninja mem3dg_docs

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/docs/html


  deploy_to_pypi:
    name: Deploy to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build_windows, build_linux, build_macos]
    defaults:
      run:
        shell: bash
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Update python libs
      run: python -m pip install scikit-build pytest

    - name: Configures source dist
      run: python setup.py sdist

    - name: Display structure of files
      run: ls -R

    # - name: Publish package
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
